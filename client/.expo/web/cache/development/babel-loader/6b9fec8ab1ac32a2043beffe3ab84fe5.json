{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\programming\\\\orderinfo\\\\client\\\\App.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { OrderWatcherClient } from \"./_proto/orderWatcher_pb_service\";\nimport { Request } from \"./_proto/orderWatcher_pb\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport { ReactNativeTransport } from '@improbable-eng/grpc-web-react-native-transport';\nexport default function App() {\n  var host = \"https://localhost:8080\";\n  useEffect(function () {\n    var customer = new Request();\n    customer.setId(1);\n    grpc.setDefaultTransport(ReactNativeTransport({\n      withCredentials: false\n    }));\n    new OrderWatcherClient(host).subscribe(customer).on('status', function (error) {\n      console.log(error);\n    }).on('data', function (response) {\n      console.log(response);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Open up App.tsx to start working on your app!\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/work/programming/orderinfo/client/App.tsx"],"names":["StatusBar","React","useEffect","OrderWatcherClient","Request","grpc","ReactNativeTransport","App","host","customer","setId","setDefaultTransport","withCredentials","subscribe","on","error","console","log","response","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,iBAAxB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,SAAQC,kBAAR;AACA,SAAQC,OAAR;AACA,SAAQC,IAAR,QAAmB,0BAAnB;AACA,SAAQC,oBAAR,QAAmC,iDAAnC;AAEA,eAAe,SAASC,GAAT,GAAe;AAE1B,MAAMC,IAAI,GAAG,wBAAb;AAGAN,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAMO,QAAQ,GAAG,IAAIL,OAAJ,EAAjB;AACAK,IAAAA,QAAQ,CAACC,KAAT,CAAe,CAAf;AAiBAL,IAAAA,IAAI,CAACM,mBAAL,CAAyBL,oBAAoB,CAAC;AAACM,MAAAA,eAAe,EAAE;AAAlB,KAAD,CAA7C;AACA,QAAIT,kBAAJ,CAAuBK,IAAvB,EAA6BK,SAA7B,CAAuCJ,QAAvC,EACKK,EADL,CACQ,QADR,EACkB,UAACC,KAAD,EAAW;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAHL,EAIKD,EAJL,CAIQ,MAJR,EAIgB,UAACI,QAAD,EAAc;AACtBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACH,KANL;AAOH,GA5BQ,EA4BN,EA5BM,CAAT;AA+BA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT;AADkB,CAAlB,CAAf","sourcesContent":["import {StatusBar} from 'expo-status-bar';\nimport React, {useEffect} from 'react';\nimport {StyleSheet, Text, View} from 'react-native';\nimport {OrderWatcherClient} from \"./_proto/orderWatcher_pb_service\";\nimport {Request} from \"./_proto/orderWatcher_pb\";\nimport {grpc} from \"@improbable-eng/grpc-web\";\nimport {ReactNativeTransport} from '@improbable-eng/grpc-web-react-native-transport';\n\nexport default function App() {\n\n    const host = \"https://localhost:8080\";\n\n\n    useEffect(() => {\n\n        const customer = new Request()\n        customer.setId(1)\n\n        // grpc.invoke(OrderWatcher.Subscribe, {\n        //   request: customer,\n        //   host: host,\n        //   transport: ReactNativeTransport({ withCredentials: false }),\n        //   onMessage: (message: Response) => {\n        //     console.log(\"got book: \", message.toObject());\n        //   },\n        //   onEnd: (code: grpc.Code, msg: string | undefined, trailers: grpc.Metadata) => {\n        //     if (code == grpc.Code.OK) {\n        //       console.log(\"all ok\")\n        //     } else {\n        //       console.log(\"hit an error\", code, msg, trailers);\n        //     }\n        //   }\n        // })\n        grpc.setDefaultTransport(ReactNativeTransport({withCredentials: false}))\n        new OrderWatcherClient(host).subscribe(customer)\n            .on('status', (error) => {\n              console.log(error)\n            })\n            .on('data', (response) => {\n                console.log(response);\n            });\n    }, []);\n\n\n    return (\n        <View style={styles.container}>\n            <Text>Open up App.tsx to start working on your app!</Text>\n            <StatusBar style=\"auto\"/>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}