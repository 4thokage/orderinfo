{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\programming\\\\orderinfo\\\\client\\\\App.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { OrderWatcherClient } from \"./_proto/orderWatcher_pb_service\";\nimport { Request } from \"./_proto/orderWatcher_pb\";\nexport default function App() {\n  var host = \"http://localhost:7070\";\n  useEffect(function () {\n    var customer = new Request();\n    customer.setId(1);\n    var req = new Request();\n    req.setId(1);\n    new OrderWatcherClient(host).subscribe(req).on('data', function (response) {\n      console.log(response);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Open up App.tsx to start working on your app!\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/work/programming/orderinfo/client/App.tsx"],"names":["StatusBar","React","useEffect","OrderWatcherClient","Request","App","host","customer","setId","req","subscribe","on","response","console","log","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,SAAsBC,kBAAtB;AACA,SAAQC,OAAR;AAIA,eAAe,SAASC,GAAT,GAAe;AAE5B,MAAMC,IAAI,GAAG,uBAAb;AAGAJ,EAAAA,SAAS,CAAC,YAAM;AAEd,QAAMK,QAAQ,GAAG,IAAIH,OAAJ,EAAjB;AACAG,IAAAA,QAAQ,CAACC,KAAT,CAAe,CAAf;AAiBA,QAAMC,GAAG,GAAG,IAAIL,OAAJ,EAAZ;AACAK,IAAAA,GAAG,CAACD,KAAJ,CAAU,CAAV;AACA,QAAIL,kBAAJ,CAAuBG,IAAvB,EAA6BI,SAA7B,CAAuCD,GAAvC,EAA4CE,EAA5C,CAA+C,MAA/C,EAAuD,UAACC,QAAD,EAAc;AACnEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAFD;AAGD,GAzBQ,EAyBN,EAzBM,CAAT;AA4BA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useEffect} from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {OrderWatcher, OrderWatcherClient} from \"./_proto/orderWatcher_pb_service\";\nimport {Request, Response} from \"./_proto/orderWatcher_pb\";\nimport {grpc} from \"@improbable-eng/grpc-web\";\nimport { ReactNativeTransport } from '@improbable-eng/grpc-web-react-native-transport';\n\nexport default function App() {\n\n  const host = \"http://localhost:7070\";\n\n\n  useEffect(() => {\n\n    const customer = new Request()\n    customer.setId(1)\n\n    // grpc.invoke(OrderWatcher.Subscribe, {\n    //   request: customer,\n    //   host: host,\n    //   transport: ReactNativeTransport({ withCredentials: false }),\n    //   onMessage: (message: Response) => {\n    //     console.log(\"got book: \", message.toObject());\n    //   },\n    //   onEnd: (code: grpc.Code, msg: string | undefined, trailers: grpc.Metadata) => {\n    //     if (code == grpc.Code.OK) {\n    //       console.log(\"all ok\")\n    //     } else {\n    //       console.log(\"hit an error\", code, msg, trailers);\n    //     }\n    //   }\n    // })\n    const req = new Request();\n    req.setId(1)\n    new OrderWatcherClient(host).subscribe(req).on('data', (response) => {\n      console.log(response);\n    });\n  }, []);\n\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.tsx to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}